From fe935ab613cabd6a7e2d77f6918e4404c0e85e74 Mon Sep 17 00:00:00 2001
From: Balaji Punnuru <balaji_punnuru@cable.comcast.com>
Date: Fri, 4 Dec 2020 17:17:48 +0000
Subject: [PATCH] Added Support for querying and publishing the Secure Timer
 Status.

Signed-off-by: Balaji Punnuru <balaji_punnuru@cable.comcast.com>
---
 SystemServices/SystemServices.cpp | 63 +++++++++++++++++++++++++++++++
 SystemServices/SystemServices.h   | 11 ++++++
 broadcom.cmake                    |  4 ++
 realtek.cmake                     |  4 ++
 4 files changed, 82 insertions(+)

diff --git a/SystemServices/SystemServices.cpp b/SystemServices/SystemServices.cpp
index b920b05..ecfc5bc 100644
--- a/SystemServices/SystemServices.cpp
+++ b/SystemServices/SystemServices.cpp
@@ -45,6 +45,10 @@
 #include "libIARM.h"
 #endif /* USE_IARMBUS || USE_IARM_BUS */
 
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+#include "systimerifc/itimermsg.h"
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
+
 #ifdef ENABLE_THERMAL_PROTECTION
 #include "thermonitor.h"
 #endif /* ENABLE_THERMAL_PROTECTION */
@@ -231,6 +235,10 @@ namespace WPEFramework {
         void _thermMgrEventsHandler(const char *owner, IARM_EventId_t eventId,
                 void *data, size_t len);
 #endif /* ENABLE_THERMAL_PROTECTION */
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+        void _timerStatusEventHandler(const char *owner, IARM_EventId_t eventId,
+                void *data, size_t len);
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
 
 #if defined(USE_IARMBUS) || defined(USE_IARM_BUS)
         static IARM_Result_t _SysModeChange(void *arg);
@@ -298,6 +306,9 @@ namespace WPEFramework {
             registerMethod("setPowerState", &SystemServices::setDevicePowerState,
                     this);
 #endif /* HAS_API_SYSTEM && HAS_API_POWERSTATE */
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+            registerMethod("getTimeStatus", &SystemServices::getSystemTimeStatus,this);
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
             registerMethod("setGzEnabled", &SystemServices::setGZEnabled, this);
             registerMethod("isGzEnabled", &SystemServices::isGZEnabled, this);
             registerMethod("hasRebootBeenRequested",
@@ -401,6 +412,9 @@ namespace WPEFramework {
 #ifdef ENABLE_THERMAL_PROTECTION
                 IARM_CHECK( IARM_Bus_RegisterEventHandler(IARM_BUS_PWRMGR_NAME, IARM_BUS_PWRMGR_EVENT_THERMAL_MODECHANGED, _thermMgrEventsHandler));
 #endif //ENABLE_THERMAL_PROTECTION
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+                IARM_CHECK( IARM_Bus_RegisterEventHandler(IARM_BUS_SYSTIME_MGR_NAME, cTIMER_STATUS_UPDATE, _timerStatusEventHandler));
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
             }
         }
 
@@ -1734,6 +1748,18 @@ namespace WPEFramework {
             sendNotify(EVT_ONTEMPERATURETHRESHOLDCHANGED, params);
         }
 
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+        void SystemServices::onTimeStatusChanged(string timequality,string timesource, string utctime)
+        {
+            JsonObject params;
+            params["TimeQuality"] = timequality;
+            params["TimeSrc"] = timesource;
+            params["Time"] = utctime;
+            LOGWARN("TimeQuality = %s TimeSrc = %s Time = %s\n",timequality.c_str(),timesource.c_str(),utctime.c_str());
+            sendNotify(EVT_ONTIMESTATUSCHANGED, params);
+        }
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
+
         /***
          * @brief : To set the Time to TZ_FILE.
          * @param1[in]	: {"params":{"timeZone":"<string>"}}
@@ -2513,6 +2539,24 @@ namespace WPEFramework {
             returnResponse(( E_OK == retVal)? true: false);
         }//end of getStateInfo
 
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+        uint32_t SystemServices::getSystemTimeStatus(const JsonObject& parameters,
+                JsonObject& response)
+        {
+           IARM_Result_t ret = IARM_RESULT_SUCCESS;
+           TimerMsg param;
+           ret = IARM_Bus_Call(IARM_BUS_SYSTIME_MGR_NAME, TIMER_STATUS_MSG, (void*)&param, sizeof(param));
+           if (ret != IARM_RESULT_SUCCESS ) {
+              LOGWARN ("Query to get Timer Status Failed..\n");
+              returnResponse(false);
+           }
+           
+           response["TimeQuality"] = std::string(param.message,cTIMER_STATUS_MESSAGE_LENGTH);
+           response["TimeSrc"] = std::string(param.timerSrc,cTIMER_STATUS_MESSAGE_LENGTH);
+           response["Time"] = std::string(param.currentTime,cTIMER_STATUS_MESSAGE_LENGTH);
+           returnResponse(true);
+        }
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
 #if defined(HAS_API_SYSTEM) && defined(HAS_API_POWERSTATE)
         /***
          * @brief : To retrieve Device Power State.
@@ -2953,6 +2997,25 @@ namespace WPEFramework {
             }
         }
 #endif /* defined(USE_IARMBUS) || defined(USE_IARM_BUS) */
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+        void _timerStatusEventHandler(const char *owner, IARM_EventId_t eventId,
+                void *data, size_t len)
+        {
+            if ((!strcmp(IARM_BUS_SYSTIME_MGR_NAME, owner)) && (0 == eventId)) {
+                    LOGWARN("IARM_BUS_SYSTIME_MGR_NAME event received\n");
+                    TimerMsg* pMsg = (TimerMsg*)data;
+                    string timequality = std::string(pMsg->message,cTIMER_STATUS_MESSAGE_LENGTH);
+                    string timersrc = std::string(pMsg->timerSrc,cTIMER_STATUS_MESSAGE_LENGTH);
+                    string timerStr = std::string(pMsg->currentTime,cTIMER_STATUS_MESSAGE_LENGTH);
+
+                if (SystemServices::_instance) {
+                    SystemServices::_instance->onTimeStatusChanged(timequality,timersrc,timerStr);
+                } else {
+                    LOGERR("SystemServices::_instance is NULL.\n");
+                }
+            }
+        }
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
 #ifdef ENABLE_THERMAL_PROTECTION
         /***
          * @brief : To handle the event of Thermal Level change. THe event is registered
diff --git a/SystemServices/SystemServices.h b/SystemServices/SystemServices.h
index 380f2cc..5690262 100644
--- a/SystemServices/SystemServices.h
+++ b/SystemServices/SystemServices.h
@@ -52,6 +52,10 @@
 #define EVT_ONMACADDRESSRETRIEVED         "onMacAddressesRetreived"
 #define EVT_ONREBOOTREQUEST               "onRebootRequest"
 
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+#define EVT_ONTIMESTATUSCHANGED           "onTimeStatusChanged"
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
+
 namespace WPEFramework {
     namespace Plugin {
 
@@ -138,6 +142,9 @@ namespace WPEFramework {
                 void onFirmwareUpdateStateChange(int state);
                 void onTemperatureThresholdChanged(string thresholdType,
                         bool exceed, float temperature);
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+                void onTimeStatusChanged(string timequality,string timesource, string utctime);
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
                 void onRebootRequest(string reason);
                 /* Events : End */
 
@@ -155,6 +162,10 @@ namespace WPEFramework {
                 uint32_t getDevicePowerState(const JsonObject& parameters,JsonObject& response);
                 uint32_t setDevicePowerState(const JsonObject& parameters,JsonObject& response);
 #endif /* HAS_API_SYSTEM && HAS_API_POWERSTATE */
+
+#ifdef ENABLE_SYSTIMEMGR_SUPPORT
+                uint32_t getSystemTimeStatus(const JsonObject& parameters,JsonObject& response);
+#endif// ENABLE_SYSTIMEMGR_SUPPORT
                 uint32_t isRebootRequested(const JsonObject& parameters,JsonObject& response);
                 uint32_t setGZEnabled(const JsonObject& parameters,JsonObject& response);
                 uint32_t isGZEnabled(const JsonObject& parameters,JsonObject& response);
diff --git a/broadcom.cmake b/broadcom.cmake
index 4722d3e..b62e848 100644
--- a/broadcom.cmake
+++ b/broadcom.cmake
@@ -89,6 +89,10 @@ add_definitions (-DBUILD_ENABLE_THERMAL_PROTECTION)
    add_definitions (-DENABLE_THERMAL_PROTECTION)
 endif()
 
+if (BUILD_ENABLE_SYSTIMEMGR_SUPPORT)
+    message("Building with SYSTIMEMGR_SUPPORT enabled")
+   add_definitions (-DENABLE_SYSTIMEMGR_SUPPORT)
+endif()
 if (SCREENCAP_SVP_ENABLED)
     message("Building with SCREENCAP_SVP_ENABLED")
     add_definitions (-DSCREENCAP_SVP_ENABLED)
diff --git a/realtek.cmake b/realtek.cmake
index 41d5978..016fc1c 100644
--- a/realtek.cmake
+++ b/realtek.cmake
@@ -76,6 +76,10 @@ if (BUILD_ENABLE_THERMAL_PROTECTION)
 add_definitions (-DBUILD_ENABLE_THERMAL_PROTECTION)
    add_definitions (-DENABLE_THERMAL_PROTECTION)
 endif()
+if (BUILD_ENABLE_SYSTIMEMGR_SUPPORT)
+    message("Building with SYSTIMEMGR_SUPPORT enabled")
+   add_definitions (-DENABLE_SYSTIMEMGR_SUPPORT)
+endif()
 
 if (BUILD_ENABLE_DEVICE_MANUFACTURER_INFO)
     message("Building with device manufacturer info")
diff --git a/amlogic.cmake b/amlogic.cmake
index 813bddb..db84fb3 100644
--- a/amlogic.cmake
+++ b/amlogic.cmake
@@ -76,6 +76,11 @@ if (BUILD_ENABLE_THERMAL_PROTECTION)
 add_definitions (-DBUILD_ENABLE_THERMAL_PROTECTION)
    add_definitions (-DENABLE_THERMAL_PROTECTION)
 endif()
+if (BUILD_ENABLE_SYSTIMEMGR_SUPPORT)
+    message("Building with SYSTIMEMGR_SUPPORT enabled")
+   add_definitions (-DENABLE_SYSTIMEMGR_SUPPORT)
+endif()
+
 
 if (BUILD_ENABLE_DEVICE_MANUFACTURER_INFO)
     message("Building with device manufacturer info")
-- 
2.24.0

