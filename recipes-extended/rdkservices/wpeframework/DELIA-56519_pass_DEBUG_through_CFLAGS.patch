Date: Jun 15, 2022 1:41 AM
From: 861809e32d685b67ec0903e757027310b46a63c8 Jun 15, 2022 11:56 PM
Subject: DELIA-56519: WPEFramework - undef __DEBUG__ unless passed in CFLAGS
Source: COMCAST
License: GPLV2
Upstream-Status: Pending
Signed-off-by: Zameerun Rasheed M S <zmamoo711@cable.comcast.com>

diff --git a/Source/core/Portability.h b/Source/core/Portability.h
index 2f94c729..d98aca83 100644
--- a/Source/core/Portability.h
+++ b/Source/core/Portability.h
@@ -396,7 +396,6 @@ inline void EXTERNAL SleepS(unsigned int a_Time)
 #endif
 
 #if defined(_THUNDER_DEBUG) || !defined(_THUNDER_NDEBUG)
-#define __DEBUG__
 #ifdef _THUNDER_PRODUCTION
 #error "Production and Debug is not a good match. Select Production or Debug, not both !!"
 #endif
diff --git a/Source/core/Trace.h b/Source/core/Trace.h
index 54ceda36..0fac237b 100644
--- a/Source/core/Trace.h
+++ b/Source/core/Trace.h
@@ -134,9 +134,22 @@ namespace WPEFramework {
 
 #define VERIFY(x, y) assert(x == y)
 #else
-#define ASSERT(x)
+
+#define ASSERT(expr)                                                                                            \
+    do {                                                                                                        \
+        if (!(expr)) {                                                                                          \
+            ASSERT_LOGGER("===== $$ [%d]: ASSERT [%s:%d] (%s)\n", TRACE_PROCESS_ID, __FILE__, __LINE__, #expr); \
+        }                                                                                                       \
+    } while(0)
+
 #define VERIFY(x, y) x
-#define ASSERT_VERBOSE(x, y, ...)
+#define ASSERT_VERBOSE(expr, format, ...)                                                                                                            \
+    do {                                                                                                                                             \
+        if (!(expr)) {                                                                                                                               \
+            ASSERT_LOGGER("===== $$ [%d]: ASSERT [%s:%d] (%s)\n         " #format "\n", TRACE_PROCESS_ID, __FILE__, __LINE__, #expr, ##__VA_ARGS__); \
+        }                                                                                                                                            \
+    } while(0)
+
 #endif
 
 #define LOG(LEVEL, MESSAGE)                                                         \
diff --git a/cmake/modules/CompileSettings.cmake b/cmake/modules/CompileSettings.cmake
index cf9d95d4..329543e9 100644
--- a/cmake/modules/CompileSettings.cmake
+++ b/cmake/modules/CompileSettings.cmake
@@ -69,11 +69,13 @@ target_compile_options(CompileSettings INTERFACE -std=c++11 -Wno-psabi)
 #
 if("${BUILD_TYPE}" STREQUAL "Debug")
     target_compile_definitions(CompileSettings INTERFACE _THUNDER_DEBUG)
+    target_compile_definitions(CompileSettings INTERFACE __DEBUG__)
     target_compile_options(CompileSettings INTERFACE -funwind-tables)
     set(CONFIG_DIR "Debug" CACHE STRING "Build config directory" FORCE)
 
 elseif("${BUILD_TYPE}" STREQUAL "DebugOptimized")
     target_compile_definitions(CompileSettings INTERFACE _THUNDER_DEBUG)
+    target_compile_definitions(CompileSettings INTERFACE __DEBUG__)
     target_compile_options(CompileSettings INTERFACE -funwind-tables)
     set(CONFIG_DIR "DebugOptimized" CACHE STRING "Build config directory" FORCE)
 
diff --git a/Source/com/Administrator.cpp b/Source/com/Administrator.cpp
index ec4797f1..4f87797a 100644
--- a/Source/com/Administrator.cpp
+++ b/Source/com/Administrator.cpp
@@ -294,7 +294,9 @@ namespace RPC {
                     }
                 } while ((loop->Decrement()) && (result == Core::ERROR_NONE));

+#ifdef __DEBUG__
                 ASSERT (loop->Flushed() == true);
+#endif

                 loop++;
             }

diff --git a/Source/tracing/TraceUnit.cpp b/Source/tracing/TraceUnit.cpp
index 011c49da..d287dc85 100644
--- a/Source/tracing/TraceUnit.cpp
+++ b/Source/tracing/TraceUnit.cpp
@@ -360,3 +360,4 @@ namespace Trace {
     }
 }
 } // namespace WPEFramework::Trace
+    template class WPEFramework::Core::IteratorType<WPEFramework::Trace::TraceUnit::TraceControlList, WPEFramework::Trace::ITraceControl*>;

