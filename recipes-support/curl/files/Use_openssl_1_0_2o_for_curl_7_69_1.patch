From 013bef555640f5358228e45e606a5781ffe2c466 Mon Sep 17 00:00:00 2001
From: mselva006c <mani_selvaraj@comcast.com>
Date: Fri, 11 Dec 2020 23:42:34 +0000
Subject: [PATCH] Subject: [PATCH] Use openssl1.0.2o for curl 7.69.1

Signed-off-by: mselva006c <mani_selvaraj@comcast.com>
---
 configure.ac | 48 +++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 37 insertions(+), 11 deletions(-)

diff --git a/configure.ac b/configure.ac
index d090622..1203052 100755
--- a/configure.ac
+++ b/configure.ac
@@ -1599,6 +1599,32 @@ else
   AC_MSG_RESULT(no)
 fi

+
+
+
+
+dnl **********************************************************************
+dnl Enforce to link it with ssl-1.0.2o
+dnl **********************************************************************
+ENFORCE_OPENSSL10=false
+LIB_CRYPTO=crypto
+LIB_SSL=ssl
+AC_ARG_ENABLE([openssl10],
+              AS_HELP_STRING([--enable-openssl10],[enforce to use openssl 1_0_2o (default is no)]),
+              [
+                case "${enableval}" in
+                 yes) ENFORCE_OPENSSL10=true
+                     LIB_CRYPTO=crypto-1.0.2o
+                     LIB_SSL=ssl-1.0.2o
+                        ;;
+                 no)  ENFORCE_OPENSSL10=false
+                      AC_MSG_ERROR([ enforce openssl 1_0_2o is disabled]) ;;
+                 *) AC_MSG_ERROR([bad value ${enableval} for --enable-openssl10]) ;;
+                esac
+              ],
+              [echo "enforce openssl 1_0_2o is disabled"])
+
+
 dnl **********************************************************************
 dnl Check for the presence of SSL libraries and headers
 dnl **********************************************************************
@@ -1719,22 +1745,22 @@ if test -z "$ssl_backends" -o "x$OPT_SSL" != xno &&
   CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
   LDFLAGS="$LDFLAGS $SSL_LDFLAGS"

-  AC_CHECK_LIB(crypto, HMAC_Update,[
+  AC_CHECK_LIB($LIB_CRYPTO, HMAC_Update,[
      HAVECRYPTO="yes"
-     LIBS="-lcrypto $LIBS"
+     LIBS="-l$LIB_CRYPTO $LIBS"
      ],[
      LDFLAGS="$CLEANLDFLAGS -L$LIB_OPENSSL"
      if test "$PKGCONFIG" = "no" ; then
        # only set this if pkg-config wasn't used
        CPPFLAGS="$CLEANCPPFLAGS -I$PREFIX_OPENSSL/include/openssl -I$PREFIX_OPENSSL/include"
      fi
-     AC_CHECK_LIB(crypto, HMAC_Init_ex,[
+     AC_CHECK_LIB($LIB_CRYPTO, HMAC_Init_ex,[
        HAVECRYPTO="yes"
-       LIBS="-lcrypto $LIBS"], [
+       LIBS="-l$LIB_CRYPTO $LIBS"], [

        dnl still no, but what about with -ldl?
        AC_MSG_CHECKING([OpenSSL linking with -ldl])
-       LIBS="$CLEANLIBS -lcrypto -ldl"
+       LIBS="$CLEANLIBS -l$LIB_CRYPTO -ldl"
        AC_TRY_LINK(
        [
          #include <openssl/err.h>
@@ -1751,7 +1777,7 @@ if test -z "$ssl_backends" -o "x$OPT_SSL" != xno &&
          dnl ok, so what about both -ldl and -lpthread?

          AC_MSG_CHECKING([OpenSSL linking with -ldl and -lpthread])
-         LIBS="$CLEANLIBS -lcrypto -ldl -lpthread"
+         LIBS="$CLEANLIBS -l$LIB_CRYPTO -ldl -lpthread"
          AC_TRY_LINK(
          [
            #include <openssl/err.h>
@@ -1780,15 +1806,15 @@ if test -z "$ssl_backends" -o "x$OPT_SSL" != xno &&
     dnl This is only reasonable to do if crypto actually is there: check for
     dnl SSL libs NOTE: it is important to do this AFTER the crypto lib

-    AC_CHECK_LIB(ssl, SSL_connect)
+    AC_CHECK_LIB($LIB_SSL, SSL_connect, support_ssl_connect=yes, support_ssl_connect=no)

-    if test "$ac_cv_lib_ssl_SSL_connect" != yes; then
+    if test "$support_ssl_connect" != yes; then
         dnl we didn't find the SSL lib, try the RSAglue/rsaref stuff
         AC_MSG_CHECKING(for ssl with RSAglue/rsaref libs in use);
         OLIBS=$LIBS
         LIBS="-lRSAglue -lrsaref $LIBS"
-        AC_CHECK_LIB(ssl, SSL_connect)
-        if test "$ac_cv_lib_ssl_SSL_connect" != yes; then
+        AC_CHECK_LIB($LIB_SSL, SSL_connect, support_ssl_connect=yes, support_ssl_connect=no)
+        if test "$support_ssl_connect" != yes; then
             dnl still no SSL_connect
             AC_MSG_RESULT(no)
             LIBS=$OLIBS
@@ -1941,7 +1967,7 @@ dnl ---
 dnl We require OpenSSL with SRP support.
 dnl ---
 if test "$OPENSSL_ENABLED" = "1"; then
-  AC_CHECK_LIB(crypto, SRP_Calc_client_key,
+  AC_CHECK_LIB($LIB_CRYPTO, SRP_Calc_client_key,
    [
      AC_DEFINE(HAVE_OPENSSL_SRP, 1, [if you have the function SRP_Calc_client_key])
      AC_SUBST(HAVE_OPENSSL_SRP, [1])

